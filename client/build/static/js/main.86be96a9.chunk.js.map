{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/pages/AccountTemp.js","components/pages/LoginTemp.js","components/pages/Nav.js","utils/queries.js","components/pages/Restaurants.js","utils/mutations.js","components/pages/SuccessTemp.js","components/pages/Test.js","components/pages/menu.js","components/pages/foodItem.js","App.js","index.js"],"names":["ADD_TO_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","reducer","state","action","type","cartOpen","cart","purchasedItem","purchasedItems","map","_id","quantity","newState","filter","order","length","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","Account","Login","Nav","className","to","id","href","QUERY_CHECKOUT","gql","QUERY_RESTAURANTS","QUERY_RESTAURANT","QUERY_MENUITEM","Restaurants","useState","restaurants","setRestaurants","useLazyQuery","loadStart","data","searchMessage","setMessage","useEffect","variables","searchTerm","tag","onSubmit","e","preventDefault","name","placeholder","onChange","target","item","index","src","logo","alt","description","Success","Test","stripePromise","loadStripe","getCheckout","then","res","redirectToCheckout","sessionId","checkout","session","onClick","price","forEach","push","addon","menuItem","restaurantId","useParams","useQuery","loading","restaurant","menu","image","htmlFor","title","itemCopy","console","log","itemInCart","find","cartItem","parseInt","handleSubmit","foodItemId","reviews","user","profileImg","username","content","class","for","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","Menu","FoodItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86be96a9.chunk.js","sourcesContent":["export const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";","import { useReducer } from 'react';\nimport {\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.purchasedItem],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.purchasedItems],\n      };\n   \n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cart: state.cart.map((purchasedItem) => {\n          if (action._id === purchasedItem._id) {\n            purchasedItem.quantity = action.quantity;\n          }\n          return purchasedItem;\n        }),\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((order) => {\n        return order._id !== action._id;\n      });\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function useOrderReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useOrderReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useOrderReducer({\n    cart: [],\n    cartOpen: true,\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\r\n\r\nexport default function Account(props) {\r\n    return (\r\n        <section>\r\n            <h1>This is the Account Settings Page</h1>\r\n        </section>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Login(props) {\r\n    return (\r\n        <section>\r\n           <h1>This is the Login Page</h1>\r\n        </section>\r\n    );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Nav(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light pb-0\">\r\n            <div className=\"container-fluid ps-4 align-items-end\">\r\n                <Link to=\"/\" className=\"navbar-brand fs-1\">\r\n                    <p className=\"title\">What's The Tea? <i className=\"fas fa-mug-hot\"></i></p>\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-end align-items-end\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav pe-3\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/account\"  className=\"nav-link p-3\" href=\"#account\">\r\n                                Account\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/address\"  className=\"nav-link p-3\" href=\"#account\">\r\n                                Address\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/login\"  className=\"nav-link p-3\" href=\"#account\">\r\n                                Sign In\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import { gql } from '@apollo/client';\n\n//TODO: update checkout Query\nexport const QUERY_CHECKOUT = gql`\nquery checkout($cart: [PurchasedItemData]!) {\n  checkout(cart: $cart) {\n    session\n  } \n}\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALLRESTAURANTS = gql`\nquery allRestaurants{\n  allRestaurants{\n    name\n    location\n    tags\n    menu{\n      name\n      price\n    }\n  }\n}\n`;\n\nexport const QUERY_RESTAURANTS = gql`\nquery restaurants($searchTerm: String, $tag: String){\n  restaurants(searchTerm: $searchTerm, tag: $tag){\n    _id\n    name\n    description\n    logo\n  }\n}\n`;\n\nexport const QUERY_RESTAURANT = gql`\nquery restaurant($_id: ID!){\n  restaurant(_id : $_id){\n    name\n    menu{\n      _id\n      name\n      description\n      image\n      price\n    }\n  }\n}\n`;\n\nexport const QUERY_MENUITEM = gql`\nquery menuItem($_id: ID!){\n  menuItem(_id: $_id){\n    _id\n    name\n    image\n    description\n    price\n    reviews{\n      user{\n        username\n        email\n        profileImg\n      }\n      content\n      rating\n    }\n  }\n}\n`;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_RESTAURANTS } from '../../utils/queries';\nimport { Link } from 'react-router-dom';\n\nexport default function Restaurants(props) {\n  \n  const [restaurants, setRestaurants] = useState([]);\n\n  const [loadStart, { data }] = useLazyQuery( QUERY_RESTAURANTS);\n\n  const [searchMessage, setMessage] = useState('');\n\n  //If the Query data changes, then update the local state variable\n  useEffect(() => {\n    if(data && data.restaurants){\n      setRestaurants(data.restaurants);\n    }\n  }, [data]);\n\n  //Upon first render, load all restaurants\n  useEffect(() => {\n    loadStart({\n      variables: {searchTerm: \"\", tag: \"\"}\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loadStart({\n      variables: {searchTerm: searchMessage, tag: \"\"}\n    });\n  }\n\n  const handleInputChange = (e) => {\n    const { target } = e;\n    setMessage(target.value);\n  };\n\nreturn (\n  <>\n    <form className=\"search-form\" onSubmit={handleSubmit}>\n      <p className=\"control has-icons-right\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"What are you in the mood for...\"\n          className=\"search-bar column input is-medium\"\n          value={searchMessage}\n          onChange={handleInputChange}\n        ></input>\n        <span className=\"icon is-small is-right\">\n          <i className=\"fas fa-mug-hot\"></i>\n        </span>\n      </p>\n      <span className=\"buttons is-centered\">\n        <button className=\"button is-info\">\n          Search\n        </button>\n      </span>\n    </form>\n    <br />\n    {restaurants.map((item, index) => {\n      return (\n        \n        <Link to={`/menu/${item._id}`} key = {index} className=\"card text-decoration-none\">\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <span className=\"media-left\">\n                <figure className=\"image is-128x128\">\n                  <img src={item.logo} alt=\"Placeholder img\" />\n                </figure>\n              </span>\n              <article className=\"media-content\">\n                <p className=\"title is-4\">{item.name}</p>\n                <p className=\"content\">\n                  {item.description}\n                </p>\n              </article>\n            </div>\n          </div>\n        </Link>\n      )\n    })}\n  </>\n);\n}\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      order {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_ORDER } from '../../utils/mutations';\r\n\r\nfunction Success() {\r\n//   const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n//   useEffect(() => {\r\n//     async function saveOrder() {\r\n//       const cart = await idbPromise('cart', 'get');\r\n//       const products = cart.map((item) => item._id);\r\n\r\n//       if (products.length) {\r\n//         const { data } = await addOrder({ variables: { products } });\r\n//         const productData = data.addOrder.products;\r\n\r\n//         productData.forEach((item) => {\r\n//           idbPromise('cart', 'delete', item);\r\n//         });\r\n//       }\r\n\r\n//       setTimeout(() => {\r\n//         window.location.assign('/');\r\n//       }, 3000);\r\n//     }\r\n\r\n//     saveOrder();\r\n//   }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;","import React, { useEffect } from 'react';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART } from '../../utils/actions';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nexport default function Test(props) {\r\n\r\n    const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\n    const [state, dispatch] = useStoreContext();\r\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n    const toggle = () => {\r\n        dispatch({ type: TOGGLE_CART });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            stripePromise.then((res) => {\r\n                res.redirectToCheckout({ sessionId: data.checkout.session });\r\n            });\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data]);\r\n\r\n    function submitCheckout() {\r\n        const cart = [];\r\n\r\n        state.cart.forEach((item) => {\r\n            cart.push({\r\n                addon: item.addon,\r\n                quantity: item.quantity,\r\n                menuItem: item._id,\r\n            });\r\n        });\r\n\r\n        getCheckout({\r\n            variables: { cart },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h1>This is a Test page that will be removed later</h1>\r\n            <h1>{state.cartOpen ? 'true' : 'false'}</h1>\r\n            <div onClick={toggle}>Click me to toggle!</div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <h2>Cart</h2>\r\n                {state.cart.map((item) => {\r\n                    return (\r\n                        <section className=\"border\">\r\n                            <div>name:{item.name}</div>\r\n                            <div>price:{item.price}</div>\r\n                            <div>quantity:{item.quantity}</div>\r\n                            <div>quantity:{item._id}</div>\r\n                        </section>\r\n                    )\r\n                })}\r\n            </div>\r\n            <button onClick={submitCheckout}>Checkout</button>\r\n        </section>\r\n    );\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"./../../styles/ratings.css\"\n// Import the `useParams()` hook\nimport { useQuery } from '@apollo/client';\nimport { QUERY_RESTAURANT } from '../../utils/queries';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nexport default function Restaurants(props) {\n\n  const [state, dispatch] = useStoreContext();\n  const { cart } = state;\n\n  const { restaurantId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_RESTAURANT, {\n    variables: { _id: restaurantId }\n  });\n\n  const handleSubmit = (index) => {\n    let itemCopy = {...data.restaurant.menu[index]}\n    console.log(itemCopy);\n    const itemInCart = cart.find((cartItem) => cartItem._id === itemCopy._id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: itemInCart._id,\n        quantity: parseInt(itemInCart.quantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        purchasedItem: { quantity: 1, addon: 'no addon', ...itemCopy }\n      });\n    }\n  }\n\n  if(loading){\n    return(\n      <h1>Loading ...</h1>\n    )\n  }\n\n  return (\n    <>\n      <h1>{data.restaurant.name}</h1>\n      {data.restaurant.menu.map((item, index) => {\n        return (\n          <section className=\"card\" key = {index}>\n            <div className=\"card-content\">\n              <div className=\"media\">\n                <span className=\"media-left\">\n                  <figure className=\"image is-128x128\">\n                    <img src={item.image} alt=\"Placeholder img\" />\n                  </figure>\n                </span>\n                <article className=\"media-content\">\n                  <p className=\"title is-4\">{item.name}</p>\n                  <div className=\"content\">\n                    <p>{item.description}</p>\n                    <p>${item.price}</p>\n                  </div>\n                  <div className=\"rate\">\n                    <input type=\"radio\" id=\"star5\" name=\"rate\" value=\"5\" />\n                    <label htmlFor=\"star5\" title=\"text\">5 stars</label>\n                    <input type=\"radio\" id=\"star4\" name=\"rate\" value=\"4\" />\n                    <label htmlFor=\"star4\" title=\"text\">4 stars</label>\n                    <input type=\"radio\" id=\"star3\" name=\"rate\" value=\"3\" />\n                    <label htmlFor=\"star3\" title=\"text\">3 stars</label>\n                    <input type=\"radio\" id=\"star2\" name=\"rate\" value=\"2\" />\n                    <label htmlFor=\"star2\" title=\"text\">2 stars</label>\n                    <input type=\"radio\" id=\"star1\" name=\"rate\" value=\"1\" />\n                    <label htmlFor=\"star1\" title=\"text\">1 star</label>\n                  </div>\n                </article>\n              </div>\n              <footer className=\"card-footer\">\n                <a href=\"#\"\n                  value={index}\n                  onClick={() => handleSubmit(index)}\n                  className=\"button card-footer-item\"\n                >Add to cart</a>\n                <Link to={`/fooditem/${data.restaurant.name}/${item._id}`} href=\"#\" className=\"button card-footer-item\">Whats the tea?</Link>\n              </footer>\n            </div>\n          </section>\n        )\n      })}\n      \n    </>\n  );\n}\n","import React from \"react\";\nimport \"./../../styles/ratings.css\"\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MENUITEM } from '../../utils/queries';\n\nexport default function Restaurants(props) {\n  const { restaurant, foodItemId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_MENUITEM, {\n    variables: { _id: foodItemId }\n  });\n\n  if(loading){\n    return(\n      <h1>Loading ...</h1>\n    )\n  }\n\n  return (\n    <>\n      <h1 className=\"is-centered\">The Tea On... {data.menuItem.name} from {restaurant}</h1>\n      {data.menuItem.reviews.map((item, index) => {\n        return (\n          <section className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"media\">\n                <span className=\"media-left\">\n                  <figure className=\"image is-128x128\">\n                    <img src={item.user.profileImg} alt=\"Placeholder img\" />\n                  </figure>\n                </span>\n                <article className=\"media-content\">\n                  <p className=\"title is-4\">posted by: {item.user.username}</p>\n                  <p className=\"content\">\n                    {item.content}\n                  </p>\n                  <div class=\"rate\">\n                    <input type=\"radio\" id=\"star5\" name=\"rate\" value=\"5\" />\n                    <label for=\"star5\" title=\"text\">5 stars</label>\n                    <input type=\"radio\" id=\"star4\" name=\"rate\" value=\"4\" />\n                    <label for=\"star4\" title=\"text\">4 stars</label>\n                    <input type=\"radio\" id=\"star3\" name=\"rate\" value=\"3\" />\n                    <label for=\"star3\" title=\"text\">3 stars</label>\n                    <input type=\"radio\" id=\"star2\" name=\"rate\" value=\"2\" />\n                    <label for=\"star2\" title=\"text\">2 stars</label>\n                    <input type=\"radio\" id=\"star1\" name=\"rate\" value=\"1\" />\n                    <label for=\"star1\" title=\"text\">1 star</label>\n                  </div>\n                </article>\n              </div>\n            </div>\n          </section>\n        );\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { StoreProvider } from './utils/GlobalState';\n\nimport Account from './components/pages/AccountTemp';\nimport Address from './components/pages/AddressTemp';\nimport Login from './components/pages/LoginTemp';\nimport Nav from './components/pages/Nav';\nimport Restaurants from './components/pages/Restaurants';\nimport Success from './components/pages/SuccessTemp';\n\nimport Test from './components/pages/Test';\nimport Menu from './components/pages/menu';\nimport FoodItem from './components/pages/foodItem';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Restaurants} />\n              <Route exact path=\"/account\" component={Account} />\n              <Route exact path=\"/address\" component={Test} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/menu/:restaurantId\" component={Menu} />\n              <Route exact path=\"/fooditem/:restaurant/:foodItemId\" component={FoodItem} />\n              <Route exact path=\"/success\" component={Success} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// TODO: Add a comment giving a brief description of what React is\n// React is a javaScript library for building user interfaces.\n\nimport React from 'react';\n\n// TODO: Add a comment that describes the difference between react and react-dom\n// The react module is an entry point to the React library, while react-dom provides access to DOM-specific methods.\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n// TODO: Add a comment describing the significance of the ReactDOM.render method\n// ReactDOM.render takes a React component, or tree of React components and (eventually) renders them to the DOM.\n// The first argument is the component we want to render (<App/>), and second is the target element to render to (#root)\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}